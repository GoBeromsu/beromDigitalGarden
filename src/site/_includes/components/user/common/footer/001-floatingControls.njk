<aside id="floating-control">
   {# 
   <!-- 이메일 버튼 -->
    <a  id="emailme" href="mailto:connect@utsob.me?subject=Regarding {{title}}&body=Discussing {{meta.siteBaseUrl}}{{permalink}}">
        <i  icon-name="mail-plus" title="Discuss" aria-hidden="true"></i>
    </a>
    #}
    <!-- 테마 전환 버튼 -->
    <span id="theme-switch">
        <i class="svg-icon light" icon-name="sun" aria-hidden="true"></i> <!-- 라이트 테마 아이콘 -->
        <i class="svg-icon dark" icon-name="moon" aria-hidden="true"></i> <!-- 다크 테마 아이콘 -->
        <i class="svg-icon auto" icon-name="sun-moon" aria-hidden="true"></i> <!-- 자동 테마 아이콘 -->
    </span>
</aside>

<script>
    // 테마 아이콘 설정 함수
    function setThemeIcon(theme) {
        let toAdd;
        switch (theme) {
            case 'dark':
                toRemove = ['auto', 'light'];
                break;
            case 'light':
                toAdd = 'fa-adjust';
                toRemove = ['dark', 'auto'];
                break;
            default:
                toRemove = ['light', 'dark'];
                break;
        }
        document.getElementById('theme-switch').classList.add(theme);
        document.getElementById('theme-switch').classList.remove(...toRemove);
    }
    // 테마 설정 함수
    function setTheme(theme, setIcon) {
        if (setIcon) {
            setThemeIcon(theme);
        }
        if (theme == 'dark') {
            document.body.classList.remove('theme-light');
            document.body.classList.add('theme-dark');
        } else if (theme == "light") {
            document.body.classList.add('theme-light');
            document.body.classList.remove('theme-dark');
        } else {
            theme = (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) ? 'dark' : 'light';
            setTheme(theme, false);
        }
        
    }
    // 현재 테마 불러오기 및 설정
    let theme = window.localStorage.getItem('site-theme') || "light";
    setTheme(theme, true);
    window.theme = theme;
    window.localStorage.setItem('site-theme', theme);

    // 시스템 테마 변경 감지 및 반응
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(event) {
        const settings = window.localStorage.getItem('site-theme');
        if (!settings || settings == "auto") {
            window.localStorage.setItem('site-theme', "auto");
            setTheme("auto", true);
        }
    });
    // 테마 전환 버튼 클릭 이벤트
    document.getElementById('theme-switch').addEventListener('click', function() {
        let theme;
        if (window.theme == 'auto') {
            theme = "dark";
        } else if (window.theme == 'dark') {
            theme = 'light'
        } else {
            theme = 'auto';
        }
        setTheme(theme, true);
        window.localStorage.setItem('site-theme', theme);
        window.theme = theme;
    })
</script>
